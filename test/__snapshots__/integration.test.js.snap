// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`template integration test using generator should generate application files  1`] = `
"const app = require('express')();
require('express-ws')(app);
const config = require('../lib/config');
const routes = require('./routes');
const asyncapi = require('../lib/asyncapi');

const start = async () => {
  //you have access to parsed AsyncAPI document in the runtime with asyncapi.get()
  await asyncapi.init();

  app.use(routes);

  app.use((req, res, next) => {
    res.status(404).send('Error: path not found');
    next();
  });

  app.use((err, req, res, next) => {
    console.error(err);
    next();
  });

  app.listen(config.port);
  console.info(\`Listening on port \${config.port}\`);
};

start();
"
`;

exports[`template integration test using generator should generate application files  2`] = `
"const util = require('util');
const { Router } = require('express');
const { pathParser } = require('../lib/path');
const { yellow } = require('../lib/colors');
const { onEcho, sendEcho } = require('./services/echo');
const router = Router();
module.exports = router;
router.ws('/echo', async (ws, req) => {
  const path = pathParser(req.path);
  console.log(\`\${yellow(path)} client connected.\`);
  await onEcho(ws);
  ws.on('message', async (msg) => {
    console.log(\`\${yellow(path)} message was received:\`);
    console.log(util.inspect(msg, { depth: null, colors: true }));
    await sendEcho(ws, { message: msg, path, query: req.query });
  });
});
"
`;

exports[`template integration test using generator should generate application files  3`] = `
"const fs = require('fs');
const path = require('path');
const { parse } = require('@asyncapi/parser');

let cached;

module.exports.init = async () => {
  if (cached) return;

  let content;

  try {
    content = fs.readFileSync(path.resolve(__dirname, '../../asyncapi.yaml'), { encoding: 'utf8' });
  } catch (e) {
    try {
      content = fs.readFileSync(path.resolve(__dirname, '../../asyncapi.json'), { encoding: 'utf8' });
    } catch (err) {
      throw new Error('Coud not find asyncapi.yaml or asyncapi.json file in the root directory of the project.');
    }
  }

  try {
    cached = await parse(content);
  } catch (e) {
    throw e;
  }

  return cached;
};

module.exports.get = () => cached;
"
`;

exports[`template integration test using generator should generate application files  4`] = `
"module.exports.yellow = (text) => {
  return \`\\\\x1b[33m\${text}\\\\x1b[0m\`;
};
"
`;

exports[`template integration test using generator should generate application files  5`] = `
"const path = require('path');
const yamlConfig = require('node-yaml-config');

const config = yamlConfig.load(path.join(__dirname, '../../config/common.yml'));

module.exports = config;
"
`;

exports[`template integration test using generator should generate application files  6`] = `
"module.exports.pathParser = (path) => {
  return path.substr(0, path.length - '/.websocket'.length);
};"
`;
